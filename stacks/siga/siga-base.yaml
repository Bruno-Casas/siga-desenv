version: '3.8'

services:
  app:
    image: pmna/siga-full:${SIGA_TAG-latest}
    env_file:
      - ../../data/siga-${SIGA_SERVICE_POSTFIX-default}/.env
    volumes:
      - ../../data/siga-${SIGA_SERVICE_POSTFIX-default}/props:/opt/jboss/siga/props
    networks:
      - traefik-public
      - siga-network
    deploy:
      labels:
        # General
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        # Middlewares configs
        - "traefik.http.middlewares.siga-${SIGA_SERVICE_POSTFIX-default}-rerirect.redirectregex.regex=(http|https):\\/\\/([^\\/]+)\\/?$$"
        - "traefik.http.middlewares.siga-${SIGA_SERVICE_POSTFIX-default}-rerirect.redirectregex.replacement=$$1://$$2/siga"
        # Wildfly root router
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.service=siga-${SIGA_SERVICE_POSTFIX-default}"
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.entrypoints=${ENTRY:?Ponto de entrada não definido}"
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.rule=PathPrefix(`/`) && !(PathPrefix(`/api`) || PathPrefix(`/admin`) || PathPrefix(`/assijus`))"
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.middlewares=siga-${SIGA_SERVICE_POSTFIX-default}-rerirect"
        # Siga config
        - "traefik.http.routers.siga-${SIGA_SERVICE_POSTFIX-default}.service=siga-${SIGA_SERVICE_POSTFIX-default}"
        - "traefik.http.routers.siga-${SIGA_SERVICE_POSTFIX-default}.entrypoints=${ENTRY:?Ponto de entrada não definido}"
        - "traefik.http.routers.siga-${SIGA_SERVICE_POSTFIX-default}.rule=PathPrefix(`/siga`)"
        - "traefik.http.services.siga-${SIGA_SERVICE_POSTFIX-default}.loadbalancer.server.port=8080"
        - "traefik.http.services.siga-${SIGA_SERVICE_POSTFIX-default}.loadBalancer.sticky.cookie=true"
        - "traefik.http.services.siga-${SIGA_SERVICE_POSTFIX-default}.loadBalancer.sticky.cookie.name=siga-sticky"
      restart_policy:
        condition: on-failure

  viz:
    image: pmna/graphviz-server
    command: "8080"
    networks:
      - siga-network

  bluc:
    image: pmna/blucservice
    networks:
      - siga-network

  assijus:
    image: pmna/assijus
    environment:
      PROP_ASSIJUS_REDIS_MASTER_HOST: redis
      PROP_ASSIJUS_REDIS_PASSWORD: ${SIGA_REDIS_PASSWORD-***GUID***}
      PROP_ASSIJUS_REDIS_DATABASE: 2
      PROP_ASSIJUS_BLUCSERVICE_URL: http://bluc:8080/blucservice/api/v1
      PROP_ASSIJUS_POPUP_URLS: http://${SIGA_HOST:?Host do siga não foi definido em SIGA_HOST};https://${SIGA_HOST};
      PROP_ASSIJUS_SYSTEMS: sigadoc
      PROP_ASSIJUS_SIGADOC_URL: http://app:8080/sigaex/api/v1
      PROP_ASSIJUS_SIGADOC_PASSWORD: ${SIGAEX_ASSINADOR_EXTERNO_PASSWORD-***GUID***}
#      PROP_ASSIJUS_SIGADOC_URL: http://${SIGA_HOST:?Host do siga não foi definido em SIGA_HOST}/sigaex/api/v1
#      PROP_ASSIJUS_SIGADOC_PASSWORD: ${SIGAEX.ASSINADOR.EXTERNO.PASSWORD-***GUID***}
#      PROP_ASSIJUS_SIGADOCHTTPS_URL: https://${SIGA_HOST:?Host do siga não foi definido em SIGA_HOST}/sigaex/api/v1
#      PROP_ASSIJUS_SIGADOCHTTPS_PASSWORD: ${SIGAEX.ASSINADOR.EXTERNO.PASSWORD-***GUID***}
    networks:
      - traefik-public
      - siga-network
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.http.routers.assijus-${SIGA_SERVICE_POSTFIX-default}.service=assijus-${SIGA_SERVICE_POSTFIX-default}"
        - "traefik.http.services.assijus-${SIGA_SERVICE_POSTFIX-default}.loadbalancer.server.port=8080"
        - "traefik.http.routers.assijus-${SIGA_SERVICE_POSTFIX-default}.entrypoints=${ENTRY:?Ponto de entrada não definido}"


  redis:
    image: redis
    command: redis-server --requirepass ${SIGA_REDIS_PASSWORD-***GUID***}
    networks:
      - siga-network
    ports:
      - target: 6379
        published: 6379
        mode: host

networks:
  traefik-public:
    external: true
  siga-network:
