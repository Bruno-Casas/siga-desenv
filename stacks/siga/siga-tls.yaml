version: '3.4'

services:
  app:
    deploy:
      labels:
        # Siga main router
        - "traefik.http.routers.siga-${SIGA_SERVICE_POSTFIX-default}.rule=Host(`${SIGA_HOST:?Host do siga n達o foi definido em SIGA_HOST}`) && PathPrefix(`/siga`)"
        - "traefik.http.routers.siga-${SIGA_SERVICE_POSTFIX-default}.tls=true"
        - "traefik.http.routers.siga-${SIGA_SERVICE_POSTFIX-default}.tls.certresolver=letsresolver"

        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.rule= Host(`${SIGA_HOST:?Host do siga n達o foi definido em SIGA_HOST}`) && (PathPrefix(`/`) && !(PathPrefix(`/api`) || PathPrefix(`/admin`) || PathPrefix(`/assijus`)))"
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.tls=true"
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.tls.certresolver=letsresolver"

        - "traefik.http.routers.dbadmin.entrypoints=websecure"
        - "traefik.http.routers.dbadmin.rule=Host(`${INFRA_HOST:?O host para infra n達o foi definido em INFRA_HOST}`) && PathPrefix(`/admin/database/`)"
        - "traefik.http.routers.dbadmin.tls=true"
        - "traefik.http.routers.dbadmin.tls.certresolver=letsresolver"

  assijus:
    deploy:
      labels:
        - "traefik.http.routers.assijus-${SIGA_SERVICE_POSTFIX-default}.rule=Host(`${SIGA_HOST:?Host do siga n達o foi definido em SIGA_HOST}`) && PathPrefix(`/assijus`)"
        - "traefik.http.routers.assijus-${SIGA_SERVICE_POSTFIX-default}.tls=true"
        - "traefik.http.routers.assijus-${SIGA_SERVICE_POSTFIX-default}.tls.certresolver=letsresolver"
