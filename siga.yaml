version: '3.4'

services:
  app:
    image: brunocasas/siga-full
    env_file:
      - data/siga-${SIGA_SERVICE_POSTFIX-default}/.env
    volumes:
      - ./data/siga-${SIGA_SERVICE_POSTFIX-default}/props/default.properties:/opt/jboss/siga/default.properties
    networks:
      - traefik-public
      - siga-network
    deploy:
      labels:
        - "siga-${SIGA_SERVICE_POSTFIX-default}"
        # General
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        # Wildfly root redirect
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.service=siga-${SIGA_SERVICE_POSTFIX-default}"
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.entrypoints=${ENTRY:?Ponto de entrada n√£o definido}"
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.rule=PathPrefix(`/`) && !PathPrefix(`/admin`)"
        - "traefik.http.routers.wildfly-${SIGA_SERVICE_POSTFIX-default}.middlewares=wildfly-${SIGA_SERVICE_POSTFIX-default}-rerirect"
        - "traefik.http.middlewares.wildfly-${SIGA_SERVICE_POSTFIX-default}-rerirect.redirectregex.regex=(http):\\/\\/([^\\/]+)\\/?$$"
        - "traefik.http.middlewares.wildfly-${SIGA_SERVICE_POSTFIX-default}-rerirect.redirectregex.replacement=$$1://$$2/siga"
        # Siga config
        - "traefik.http.routers.siga-${SIGA_SERVICE_POSTFIX-default}.service=siga-${SIGA_SERVICE_POSTFIX-default}"
        - "traefik.http.routers.siga-${SIGA_SERVICE_POSTFIX-default}.rule=PathPrefix(`/siga`)"
        - "traefik.http.services.siga-${SIGA_SERVICE_POSTFIX-default}.loadbalancer.server.port=8080"
        - "traefik.http.services.siga-${SIGA_SERVICE_POSTFIX-default}.loadBalancer.sticky.cookie=true"
        - "traefik.http.services.siga-${SIGA_SERVICE_POSTFIX-default}.loadBalancer.sticky.cookie.name=siga-sticky"
      restart_policy:
        condition: on-failure

  viz:
    image: omerio/graphviz-server
    command: "8080"
    networks:
      - siga-network

  bluc:
    image: brunocasas/blucservice
#    volumes:
#      - ./logs/bluc:/var/log
    networks:
      - siga-network

  assijus:
    image: brunocasas/assijus
#    volumes:
#      - ./logs/assijus:/var/log
    environment:
      PROP_ASSIJUS_REDIS_MASTER_HOST: redis
      PROP_ASSIJUS_REDIS_MASTER_PORT: 6379
      PROP_ASSIJUS_REDIS_SLAVE_HOST:
      PROP_ASSIJUS_REDIS_SLAVE_PORT:
      PROP_ASSIJUS_REDIS_PASSWORD: sigadesenv
      PROP_ASSIJUS_REDIS_DATABASE: 1
      PROP_ASSIJUS_BLUCSERVICE_URL: http://bluc:8080/blucservice/api/v1
      PROP_ASSIJUS_POPUP_URLS: http://localhost:8080
      PROP_ASSIJUS_SYSTEMS: testsigner
      PROP_ASSIJUS_TESTSIGNER_URL: http://testsigner:8080/testsigner/api/v1
      PROP_ASSIJUS_TESTSIGNER_PASSWORD: sigadesenvteste
      # PROP_ASSIJUS_TIMESTAMP_PUBLIC_KEY:
      # PROP_ASSIJUS_TIMESTAMP_PRIVATE_KEY:
    networks:
      - siga-network

  redis:
    image: redis
    command: redis-server --requirepass sigadesenv
    networks:
      - siga-network

networks:
  traefik-public:
    external: true
  siga-network:
